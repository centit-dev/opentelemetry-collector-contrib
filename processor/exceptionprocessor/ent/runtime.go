// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/open-telemetry/opentelemetry-collector-contrib/processor/exceptionprocessor/ent/exceptioncategory"
	"github.com/open-telemetry/opentelemetry-collector-contrib/processor/exceptionprocessor/ent/exceptiondefinition"
	"github.com/open-telemetry/opentelemetry-collector-contrib/processor/exceptionprocessor/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	exceptioncategoryFields := schema.ExceptionCategory{}.Fields()
	_ = exceptioncategoryFields
	// exceptioncategoryDescName is the schema descriptor for name field.
	exceptioncategoryDescName := exceptioncategoryFields[1].Descriptor()
	// exceptioncategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	exceptioncategory.NameValidator = func() func(string) error {
		validators := exceptioncategoryDescName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(name string) error {
			for _, fn := range fns {
				if err := fn(name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// exceptioncategoryDescIsValid is the schema descriptor for is_valid field.
	exceptioncategoryDescIsValid := exceptioncategoryFields[2].Descriptor()
	// exceptioncategory.DefaultIsValid holds the default value on creation for the is_valid field.
	exceptioncategory.DefaultIsValid = exceptioncategoryDescIsValid.Default.(int)
	// exceptioncategoryDescCreateTime is the schema descriptor for create_time field.
	exceptioncategoryDescCreateTime := exceptioncategoryFields[3].Descriptor()
	// exceptioncategory.DefaultCreateTime holds the default value on creation for the create_time field.
	exceptioncategory.DefaultCreateTime = exceptioncategoryDescCreateTime.Default.(func() time.Time)
	// exceptioncategoryDescUpdateTime is the schema descriptor for update_time field.
	exceptioncategoryDescUpdateTime := exceptioncategoryFields[4].Descriptor()
	// exceptioncategory.DefaultUpdateTime holds the default value on creation for the update_time field.
	exceptioncategory.DefaultUpdateTime = exceptioncategoryDescUpdateTime.Default.(func() time.Time)
	// exceptioncategory.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	exceptioncategory.UpdateDefaultUpdateTime = exceptioncategoryDescUpdateTime.UpdateDefault.(func() time.Time)
	exceptiondefinitionFields := schema.ExceptionDefinition{}.Fields()
	_ = exceptiondefinitionFields
	// exceptiondefinitionDescCategoryID is the schema descriptor for category_id field.
	exceptiondefinitionDescCategoryID := exceptiondefinitionFields[1].Descriptor()
	// exceptiondefinition.CategoryIDValidator is a validator for the "category_id" field. It is called by the builders before save.
	exceptiondefinition.CategoryIDValidator = exceptiondefinitionDescCategoryID.Validators[0].(func(int64) error)
	// exceptiondefinitionDescShortName is the schema descriptor for short_name field.
	exceptiondefinitionDescShortName := exceptiondefinitionFields[2].Descriptor()
	// exceptiondefinition.ShortNameValidator is a validator for the "short_name" field. It is called by the builders before save.
	exceptiondefinition.ShortNameValidator = func() func(string) error {
		validators := exceptiondefinitionDescShortName.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(short_name string) error {
			for _, fn := range fns {
				if err := fn(short_name); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// exceptiondefinitionDescLongName is the schema descriptor for long_name field.
	exceptiondefinitionDescLongName := exceptiondefinitionFields[3].Descriptor()
	// exceptiondefinition.LongNameValidator is a validator for the "long_name" field. It is called by the builders before save.
	exceptiondefinition.LongNameValidator = exceptiondefinitionDescLongName.Validators[0].(func(string) error)
	// exceptiondefinitionDescIsValid is the schema descriptor for is_valid field.
	exceptiondefinitionDescIsValid := exceptiondefinitionFields[6].Descriptor()
	// exceptiondefinition.DefaultIsValid holds the default value on creation for the is_valid field.
	exceptiondefinition.DefaultIsValid = exceptiondefinitionDescIsValid.Default.(int)
	// exceptiondefinitionDescCreateTime is the schema descriptor for create_time field.
	exceptiondefinitionDescCreateTime := exceptiondefinitionFields[7].Descriptor()
	// exceptiondefinition.DefaultCreateTime holds the default value on creation for the create_time field.
	exceptiondefinition.DefaultCreateTime = exceptiondefinitionDescCreateTime.Default.(func() time.Time)
	// exceptiondefinitionDescUpdateTime is the schema descriptor for update_time field.
	exceptiondefinitionDescUpdateTime := exceptiondefinitionFields[8].Descriptor()
	// exceptiondefinition.DefaultUpdateTime holds the default value on creation for the update_time field.
	exceptiondefinition.DefaultUpdateTime = exceptiondefinitionDescUpdateTime.Default.(func() time.Time)
	// exceptiondefinitionDescID is the schema descriptor for id field.
	exceptiondefinitionDescID := exceptiondefinitionFields[0].Descriptor()
	// exceptiondefinition.IDValidator is a validator for the "id" field. It is called by the builders before save.
	exceptiondefinition.IDValidator = exceptiondefinitionDescID.Validators[0].(func(int64) error)
}
