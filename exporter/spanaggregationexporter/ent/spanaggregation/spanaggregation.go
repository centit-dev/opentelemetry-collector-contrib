// Code generated by ent, DO NOT EDIT.

package spanaggregation

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the spanaggregation type in the database.
	Label = "span_aggregation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "SpanId"
	// FieldTimestamp holds the string denoting the timestamp field in the database.
	FieldTimestamp = "Timestamp"
	// FieldTraceId holds the string denoting the traceid field in the database.
	FieldTraceId = "TraceId"
	// FieldParentSpanId holds the string denoting the parentspanid field in the database.
	FieldParentSpanId = "ParentSpanId"
	// FieldPlatformName holds the string denoting the platformname field in the database.
	FieldPlatformName = "PlatformName"
	// FieldRootServiceName holds the string denoting the rootservicename field in the database.
	FieldRootServiceName = "RootServiceName"
	// FieldRootSpanName holds the string denoting the rootspanname field in the database.
	FieldRootSpanName = "RootSpanName"
	// FieldServiceName holds the string denoting the servicename field in the database.
	FieldServiceName = "ServiceName"
	// FieldSpanName holds the string denoting the spanname field in the database.
	FieldSpanName = "SpanName"
	// FieldResourceAttributes holds the string denoting the resourceattributes field in the database.
	FieldResourceAttributes = "ResourceAttributes"
	// FieldSpanAttributes holds the string denoting the spanattributes field in the database.
	FieldSpanAttributes = "SpanAttributes"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "Duration"
	// FieldGap holds the string denoting the gap field in the database.
	FieldGap = "Gap"
	// FieldSelfDuration holds the string denoting the selfduration field in the database.
	FieldSelfDuration = "SelfDuration"
	// Table holds the table name of the spanaggregation in the database.
	Table = "otel_span_aggregations"
)

// Columns holds all SQL columns for spanaggregation fields.
var Columns = []string{
	FieldID,
	FieldTimestamp,
	FieldTraceId,
	FieldParentSpanId,
	FieldPlatformName,
	FieldRootServiceName,
	FieldRootSpanName,
	FieldServiceName,
	FieldSpanName,
	FieldResourceAttributes,
	FieldSpanAttributes,
	FieldDuration,
	FieldGap,
	FieldSelfDuration,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the SpanAggregation queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByTimestamp orders the results by the Timestamp field.
func ByTimestamp(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTimestamp, opts...).ToFunc()
}

// ByTraceId orders the results by the TraceId field.
func ByTraceId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldTraceId, opts...).ToFunc()
}

// ByParentSpanId orders the results by the ParentSpanId field.
func ByParentSpanId(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldParentSpanId, opts...).ToFunc()
}

// ByPlatformName orders the results by the PlatformName field.
func ByPlatformName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPlatformName, opts...).ToFunc()
}

// ByRootServiceName orders the results by the RootServiceName field.
func ByRootServiceName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRootServiceName, opts...).ToFunc()
}

// ByRootSpanName orders the results by the RootSpanName field.
func ByRootSpanName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRootSpanName, opts...).ToFunc()
}

// ByServiceName orders the results by the ServiceName field.
func ByServiceName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldServiceName, opts...).ToFunc()
}

// BySpanName orders the results by the SpanName field.
func BySpanName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSpanName, opts...).ToFunc()
}

// ByResourceAttributes orders the results by the ResourceAttributes field.
func ByResourceAttributes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResourceAttributes, opts...).ToFunc()
}

// BySpanAttributes orders the results by the SpanAttributes field.
func BySpanAttributes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSpanAttributes, opts...).ToFunc()
}

// ByDuration orders the results by the Duration field.
func ByDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDuration, opts...).ToFunc()
}

// ByGap orders the results by the Gap field.
func ByGap(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldGap, opts...).ToFunc()
}

// BySelfDuration orders the results by the SelfDuration field.
func BySelfDuration(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSelfDuration, opts...).ToFunc()
}
