// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// TbApplicationStructureColumns holds the columns for the "tb_application_structure" table.
	TbApplicationStructureColumns = []*schema.Column{
		{Name: "code", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "parent_code", Type: field.TypeString, Size: 100},
		{Name: "level", Type: field.TypeInt},
		{Name: "valid_date", Type: field.TypeTime},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
	}
	// TbApplicationStructureTable holds the schema information for the "tb_application_structure" table.
	TbApplicationStructureTable = &schema.Table{
		Name:       "tb_application_structure",
		Columns:    TbApplicationStructureColumns,
		PrimaryKey: []*schema.Column{TbApplicationStructureColumns[0]},
	}
	// TbQueryKeyColumns holds the columns for the "tb_query_key" table.
	TbQueryKeyColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "spans_valid", Type: field.TypeBool},
		{Name: "metrics_valid", Type: field.TypeBool},
		{Name: "logs_valid", Type: field.TypeBool},
		{Name: "valid_date", Type: field.TypeTime},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
	}
	// TbQueryKeyTable holds the schema information for the "tb_query_key" table.
	TbQueryKeyTable = &schema.Table{
		Name:       "tb_query_key",
		Columns:    TbQueryKeyColumns,
		PrimaryKey: []*schema.Column{TbQueryKeyColumns[0]},
	}
	// TbQueryValueColumns holds the columns for the "tb_query_value" table.
	TbQueryValueColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "value", Type: field.TypeString},
		{Name: "valid_date", Type: field.TypeTime},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "key_id", Type: field.TypeInt64},
	}
	// TbQueryValueTable holds the schema information for the "tb_query_value" table.
	TbQueryValueTable = &schema.Table{
		Name:       "tb_query_value",
		Columns:    TbQueryValueColumns,
		PrimaryKey: []*schema.Column{TbQueryValueColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tb_query_value_tb_query_key_values",
				Columns:    []*schema.Column{TbQueryValueColumns[5]},
				RefColumns: []*schema.Column{TbQueryKeyColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		TbApplicationStructureTable,
		TbQueryKeyTable,
		TbQueryValueTable,
	}
)

func init() {
	TbApplicationStructureTable.Annotation = &entsql.Annotation{
		Table: "tb_application_structure",
	}
	TbQueryKeyTable.Annotation = &entsql.Annotation{
		Table: "tb_query_key",
	}
	TbQueryValueTable.ForeignKeys[0].RefTable = TbQueryKeyTable
	TbQueryValueTable.Annotation = &entsql.Annotation{
		Table: "tb_query_value",
	}
}
