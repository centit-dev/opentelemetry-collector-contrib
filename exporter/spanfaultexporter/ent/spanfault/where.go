// Code generated by ent, DO NOT EDIT.

package spanfault

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"github.com/teanoon/opentelemetry-collector-contrib/exporter/spanfaultexporter/ent/predicate"
	"github.com/teanoon/opentelemetry-collector-contrib/exporter/spanfaultexporter/ent/schema"
)

// ID filters vertices based on their ID field.
func ID(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldID, id))
}

// IDEqualFold applies the EqualFold predicate on the ID field.
func IDEqualFold(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldID, id))
}

// IDContainsFold applies the ContainsFold predicate on the ID field.
func IDContainsFold(id string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldID, id))
}

// Timestamp applies equality check predicate on the "Timestamp" field. It's identical to TimestampEQ.
func Timestamp(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldTimestamp, v))
}

// PlatformName applies equality check predicate on the "PlatformName" field. It's identical to PlatformNameEQ.
func PlatformName(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldPlatformName, v))
}

// AppCluster applies equality check predicate on the "AppCluster" field. It's identical to AppClusterEQ.
func AppCluster(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldAppCluster, v))
}

// InstanceName applies equality check predicate on the "InstanceName" field. It's identical to InstanceNameEQ.
func InstanceName(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldInstanceName, v))
}

// RootServiceName applies equality check predicate on the "RootServiceName" field. It's identical to RootServiceNameEQ.
func RootServiceName(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldRootServiceName, v))
}

// RootSpanName applies equality check predicate on the "RootSpanName" field. It's identical to RootSpanNameEQ.
func RootSpanName(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldRootSpanName, v))
}

// RootDuration applies equality check predicate on the "RootDuration" field. It's identical to RootDurationEQ.
func RootDuration(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldRootDuration, v))
}

// ParentSpanId applies equality check predicate on the "ParentSpanId" field. It's identical to ParentSpanIdEQ.
func ParentSpanId(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldParentSpanId, v))
}

// SpanId applies equality check predicate on the "SpanId" field. It's identical to SpanIdEQ.
func SpanId(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanId, v))
}

// ServiceName applies equality check predicate on the "ServiceName" field. It's identical to ServiceNameEQ.
func ServiceName(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldServiceName, v))
}

// SpanName applies equality check predicate on the "SpanName" field. It's identical to SpanNameEQ.
func SpanName(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanName, v))
}

// SpanKind applies equality check predicate on the "SpanKind" field. It's identical to SpanKindEQ.
func SpanKind(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanKind, v))
}

// FaultKind applies equality check predicate on the "FaultKind" field. It's identical to FaultKindEQ.
func FaultKind(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldFaultKind, v))
}

// Gap applies equality check predicate on the "Gap" field. It's identical to GapEQ.
func Gap(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldGap, v))
}

// SelfDuration applies equality check predicate on the "SelfDuration" field. It's identical to SelfDurationEQ.
func SelfDuration(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSelfDuration, v))
}

// ResourceAttributes applies equality check predicate on the "ResourceAttributes" field. It's identical to ResourceAttributesEQ.
func ResourceAttributes(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldResourceAttributes, v))
}

// SpanAttributes applies equality check predicate on the "SpanAttributes" field. It's identical to SpanAttributesEQ.
func SpanAttributes(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanAttributes, v))
}

// TimestampEQ applies the EQ predicate on the "Timestamp" field.
func TimestampEQ(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldTimestamp, v))
}

// TimestampNEQ applies the NEQ predicate on the "Timestamp" field.
func TimestampNEQ(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldTimestamp, v))
}

// TimestampIn applies the In predicate on the "Timestamp" field.
func TimestampIn(vs ...time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldTimestamp, vs...))
}

// TimestampNotIn applies the NotIn predicate on the "Timestamp" field.
func TimestampNotIn(vs ...time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldTimestamp, vs...))
}

// TimestampGT applies the GT predicate on the "Timestamp" field.
func TimestampGT(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldTimestamp, v))
}

// TimestampGTE applies the GTE predicate on the "Timestamp" field.
func TimestampGTE(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldTimestamp, v))
}

// TimestampLT applies the LT predicate on the "Timestamp" field.
func TimestampLT(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldTimestamp, v))
}

// TimestampLTE applies the LTE predicate on the "Timestamp" field.
func TimestampLTE(v time.Time) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldTimestamp, v))
}

// TimestampIsNil applies the IsNil predicate on the "Timestamp" field.
func TimestampIsNil() predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIsNull(FieldTimestamp))
}

// TimestampNotNil applies the NotNil predicate on the "Timestamp" field.
func TimestampNotNil() predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotNull(FieldTimestamp))
}

// PlatformNameEQ applies the EQ predicate on the "PlatformName" field.
func PlatformNameEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldPlatformName, v))
}

// PlatformNameNEQ applies the NEQ predicate on the "PlatformName" field.
func PlatformNameNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldPlatformName, v))
}

// PlatformNameIn applies the In predicate on the "PlatformName" field.
func PlatformNameIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldPlatformName, vs...))
}

// PlatformNameNotIn applies the NotIn predicate on the "PlatformName" field.
func PlatformNameNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldPlatformName, vs...))
}

// PlatformNameGT applies the GT predicate on the "PlatformName" field.
func PlatformNameGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldPlatformName, v))
}

// PlatformNameGTE applies the GTE predicate on the "PlatformName" field.
func PlatformNameGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldPlatformName, v))
}

// PlatformNameLT applies the LT predicate on the "PlatformName" field.
func PlatformNameLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldPlatformName, v))
}

// PlatformNameLTE applies the LTE predicate on the "PlatformName" field.
func PlatformNameLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldPlatformName, v))
}

// PlatformNameContains applies the Contains predicate on the "PlatformName" field.
func PlatformNameContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldPlatformName, v))
}

// PlatformNameHasPrefix applies the HasPrefix predicate on the "PlatformName" field.
func PlatformNameHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldPlatformName, v))
}

// PlatformNameHasSuffix applies the HasSuffix predicate on the "PlatformName" field.
func PlatformNameHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldPlatformName, v))
}

// PlatformNameEqualFold applies the EqualFold predicate on the "PlatformName" field.
func PlatformNameEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldPlatformName, v))
}

// PlatformNameContainsFold applies the ContainsFold predicate on the "PlatformName" field.
func PlatformNameContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldPlatformName, v))
}

// AppClusterEQ applies the EQ predicate on the "AppCluster" field.
func AppClusterEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldAppCluster, v))
}

// AppClusterNEQ applies the NEQ predicate on the "AppCluster" field.
func AppClusterNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldAppCluster, v))
}

// AppClusterIn applies the In predicate on the "AppCluster" field.
func AppClusterIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldAppCluster, vs...))
}

// AppClusterNotIn applies the NotIn predicate on the "AppCluster" field.
func AppClusterNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldAppCluster, vs...))
}

// AppClusterGT applies the GT predicate on the "AppCluster" field.
func AppClusterGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldAppCluster, v))
}

// AppClusterGTE applies the GTE predicate on the "AppCluster" field.
func AppClusterGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldAppCluster, v))
}

// AppClusterLT applies the LT predicate on the "AppCluster" field.
func AppClusterLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldAppCluster, v))
}

// AppClusterLTE applies the LTE predicate on the "AppCluster" field.
func AppClusterLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldAppCluster, v))
}

// AppClusterContains applies the Contains predicate on the "AppCluster" field.
func AppClusterContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldAppCluster, v))
}

// AppClusterHasPrefix applies the HasPrefix predicate on the "AppCluster" field.
func AppClusterHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldAppCluster, v))
}

// AppClusterHasSuffix applies the HasSuffix predicate on the "AppCluster" field.
func AppClusterHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldAppCluster, v))
}

// AppClusterEqualFold applies the EqualFold predicate on the "AppCluster" field.
func AppClusterEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldAppCluster, v))
}

// AppClusterContainsFold applies the ContainsFold predicate on the "AppCluster" field.
func AppClusterContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldAppCluster, v))
}

// InstanceNameEQ applies the EQ predicate on the "InstanceName" field.
func InstanceNameEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldInstanceName, v))
}

// InstanceNameNEQ applies the NEQ predicate on the "InstanceName" field.
func InstanceNameNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldInstanceName, v))
}

// InstanceNameIn applies the In predicate on the "InstanceName" field.
func InstanceNameIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldInstanceName, vs...))
}

// InstanceNameNotIn applies the NotIn predicate on the "InstanceName" field.
func InstanceNameNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldInstanceName, vs...))
}

// InstanceNameGT applies the GT predicate on the "InstanceName" field.
func InstanceNameGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldInstanceName, v))
}

// InstanceNameGTE applies the GTE predicate on the "InstanceName" field.
func InstanceNameGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldInstanceName, v))
}

// InstanceNameLT applies the LT predicate on the "InstanceName" field.
func InstanceNameLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldInstanceName, v))
}

// InstanceNameLTE applies the LTE predicate on the "InstanceName" field.
func InstanceNameLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldInstanceName, v))
}

// InstanceNameContains applies the Contains predicate on the "InstanceName" field.
func InstanceNameContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldInstanceName, v))
}

// InstanceNameHasPrefix applies the HasPrefix predicate on the "InstanceName" field.
func InstanceNameHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldInstanceName, v))
}

// InstanceNameHasSuffix applies the HasSuffix predicate on the "InstanceName" field.
func InstanceNameHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldInstanceName, v))
}

// InstanceNameEqualFold applies the EqualFold predicate on the "InstanceName" field.
func InstanceNameEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldInstanceName, v))
}

// InstanceNameContainsFold applies the ContainsFold predicate on the "InstanceName" field.
func InstanceNameContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldInstanceName, v))
}

// RootServiceNameEQ applies the EQ predicate on the "RootServiceName" field.
func RootServiceNameEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldRootServiceName, v))
}

// RootServiceNameNEQ applies the NEQ predicate on the "RootServiceName" field.
func RootServiceNameNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldRootServiceName, v))
}

// RootServiceNameIn applies the In predicate on the "RootServiceName" field.
func RootServiceNameIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldRootServiceName, vs...))
}

// RootServiceNameNotIn applies the NotIn predicate on the "RootServiceName" field.
func RootServiceNameNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldRootServiceName, vs...))
}

// RootServiceNameGT applies the GT predicate on the "RootServiceName" field.
func RootServiceNameGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldRootServiceName, v))
}

// RootServiceNameGTE applies the GTE predicate on the "RootServiceName" field.
func RootServiceNameGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldRootServiceName, v))
}

// RootServiceNameLT applies the LT predicate on the "RootServiceName" field.
func RootServiceNameLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldRootServiceName, v))
}

// RootServiceNameLTE applies the LTE predicate on the "RootServiceName" field.
func RootServiceNameLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldRootServiceName, v))
}

// RootServiceNameContains applies the Contains predicate on the "RootServiceName" field.
func RootServiceNameContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldRootServiceName, v))
}

// RootServiceNameHasPrefix applies the HasPrefix predicate on the "RootServiceName" field.
func RootServiceNameHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldRootServiceName, v))
}

// RootServiceNameHasSuffix applies the HasSuffix predicate on the "RootServiceName" field.
func RootServiceNameHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldRootServiceName, v))
}

// RootServiceNameEqualFold applies the EqualFold predicate on the "RootServiceName" field.
func RootServiceNameEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldRootServiceName, v))
}

// RootServiceNameContainsFold applies the ContainsFold predicate on the "RootServiceName" field.
func RootServiceNameContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldRootServiceName, v))
}

// RootSpanNameEQ applies the EQ predicate on the "RootSpanName" field.
func RootSpanNameEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldRootSpanName, v))
}

// RootSpanNameNEQ applies the NEQ predicate on the "RootSpanName" field.
func RootSpanNameNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldRootSpanName, v))
}

// RootSpanNameIn applies the In predicate on the "RootSpanName" field.
func RootSpanNameIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldRootSpanName, vs...))
}

// RootSpanNameNotIn applies the NotIn predicate on the "RootSpanName" field.
func RootSpanNameNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldRootSpanName, vs...))
}

// RootSpanNameGT applies the GT predicate on the "RootSpanName" field.
func RootSpanNameGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldRootSpanName, v))
}

// RootSpanNameGTE applies the GTE predicate on the "RootSpanName" field.
func RootSpanNameGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldRootSpanName, v))
}

// RootSpanNameLT applies the LT predicate on the "RootSpanName" field.
func RootSpanNameLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldRootSpanName, v))
}

// RootSpanNameLTE applies the LTE predicate on the "RootSpanName" field.
func RootSpanNameLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldRootSpanName, v))
}

// RootSpanNameContains applies the Contains predicate on the "RootSpanName" field.
func RootSpanNameContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldRootSpanName, v))
}

// RootSpanNameHasPrefix applies the HasPrefix predicate on the "RootSpanName" field.
func RootSpanNameHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldRootSpanName, v))
}

// RootSpanNameHasSuffix applies the HasSuffix predicate on the "RootSpanName" field.
func RootSpanNameHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldRootSpanName, v))
}

// RootSpanNameEqualFold applies the EqualFold predicate on the "RootSpanName" field.
func RootSpanNameEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldRootSpanName, v))
}

// RootSpanNameContainsFold applies the ContainsFold predicate on the "RootSpanName" field.
func RootSpanNameContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldRootSpanName, v))
}

// RootDurationEQ applies the EQ predicate on the "RootDuration" field.
func RootDurationEQ(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldRootDuration, v))
}

// RootDurationNEQ applies the NEQ predicate on the "RootDuration" field.
func RootDurationNEQ(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldRootDuration, v))
}

// RootDurationIn applies the In predicate on the "RootDuration" field.
func RootDurationIn(vs ...int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldRootDuration, vs...))
}

// RootDurationNotIn applies the NotIn predicate on the "RootDuration" field.
func RootDurationNotIn(vs ...int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldRootDuration, vs...))
}

// RootDurationGT applies the GT predicate on the "RootDuration" field.
func RootDurationGT(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldRootDuration, v))
}

// RootDurationGTE applies the GTE predicate on the "RootDuration" field.
func RootDurationGTE(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldRootDuration, v))
}

// RootDurationLT applies the LT predicate on the "RootDuration" field.
func RootDurationLT(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldRootDuration, v))
}

// RootDurationLTE applies the LTE predicate on the "RootDuration" field.
func RootDurationLTE(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldRootDuration, v))
}

// ParentSpanIdEQ applies the EQ predicate on the "ParentSpanId" field.
func ParentSpanIdEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldParentSpanId, v))
}

// ParentSpanIdNEQ applies the NEQ predicate on the "ParentSpanId" field.
func ParentSpanIdNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldParentSpanId, v))
}

// ParentSpanIdIn applies the In predicate on the "ParentSpanId" field.
func ParentSpanIdIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldParentSpanId, vs...))
}

// ParentSpanIdNotIn applies the NotIn predicate on the "ParentSpanId" field.
func ParentSpanIdNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldParentSpanId, vs...))
}

// ParentSpanIdGT applies the GT predicate on the "ParentSpanId" field.
func ParentSpanIdGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldParentSpanId, v))
}

// ParentSpanIdGTE applies the GTE predicate on the "ParentSpanId" field.
func ParentSpanIdGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldParentSpanId, v))
}

// ParentSpanIdLT applies the LT predicate on the "ParentSpanId" field.
func ParentSpanIdLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldParentSpanId, v))
}

// ParentSpanIdLTE applies the LTE predicate on the "ParentSpanId" field.
func ParentSpanIdLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldParentSpanId, v))
}

// ParentSpanIdContains applies the Contains predicate on the "ParentSpanId" field.
func ParentSpanIdContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldParentSpanId, v))
}

// ParentSpanIdHasPrefix applies the HasPrefix predicate on the "ParentSpanId" field.
func ParentSpanIdHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldParentSpanId, v))
}

// ParentSpanIdHasSuffix applies the HasSuffix predicate on the "ParentSpanId" field.
func ParentSpanIdHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldParentSpanId, v))
}

// ParentSpanIdEqualFold applies the EqualFold predicate on the "ParentSpanId" field.
func ParentSpanIdEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldParentSpanId, v))
}

// ParentSpanIdContainsFold applies the ContainsFold predicate on the "ParentSpanId" field.
func ParentSpanIdContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldParentSpanId, v))
}

// SpanIdEQ applies the EQ predicate on the "SpanId" field.
func SpanIdEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanId, v))
}

// SpanIdNEQ applies the NEQ predicate on the "SpanId" field.
func SpanIdNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldSpanId, v))
}

// SpanIdIn applies the In predicate on the "SpanId" field.
func SpanIdIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldSpanId, vs...))
}

// SpanIdNotIn applies the NotIn predicate on the "SpanId" field.
func SpanIdNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldSpanId, vs...))
}

// SpanIdGT applies the GT predicate on the "SpanId" field.
func SpanIdGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldSpanId, v))
}

// SpanIdGTE applies the GTE predicate on the "SpanId" field.
func SpanIdGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldSpanId, v))
}

// SpanIdLT applies the LT predicate on the "SpanId" field.
func SpanIdLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldSpanId, v))
}

// SpanIdLTE applies the LTE predicate on the "SpanId" field.
func SpanIdLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldSpanId, v))
}

// SpanIdContains applies the Contains predicate on the "SpanId" field.
func SpanIdContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldSpanId, v))
}

// SpanIdHasPrefix applies the HasPrefix predicate on the "SpanId" field.
func SpanIdHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldSpanId, v))
}

// SpanIdHasSuffix applies the HasSuffix predicate on the "SpanId" field.
func SpanIdHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldSpanId, v))
}

// SpanIdEqualFold applies the EqualFold predicate on the "SpanId" field.
func SpanIdEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldSpanId, v))
}

// SpanIdContainsFold applies the ContainsFold predicate on the "SpanId" field.
func SpanIdContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldSpanId, v))
}

// ServiceNameEQ applies the EQ predicate on the "ServiceName" field.
func ServiceNameEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldServiceName, v))
}

// ServiceNameNEQ applies the NEQ predicate on the "ServiceName" field.
func ServiceNameNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldServiceName, v))
}

// ServiceNameIn applies the In predicate on the "ServiceName" field.
func ServiceNameIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldServiceName, vs...))
}

// ServiceNameNotIn applies the NotIn predicate on the "ServiceName" field.
func ServiceNameNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldServiceName, vs...))
}

// ServiceNameGT applies the GT predicate on the "ServiceName" field.
func ServiceNameGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldServiceName, v))
}

// ServiceNameGTE applies the GTE predicate on the "ServiceName" field.
func ServiceNameGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldServiceName, v))
}

// ServiceNameLT applies the LT predicate on the "ServiceName" field.
func ServiceNameLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldServiceName, v))
}

// ServiceNameLTE applies the LTE predicate on the "ServiceName" field.
func ServiceNameLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldServiceName, v))
}

// ServiceNameContains applies the Contains predicate on the "ServiceName" field.
func ServiceNameContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldServiceName, v))
}

// ServiceNameHasPrefix applies the HasPrefix predicate on the "ServiceName" field.
func ServiceNameHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldServiceName, v))
}

// ServiceNameHasSuffix applies the HasSuffix predicate on the "ServiceName" field.
func ServiceNameHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldServiceName, v))
}

// ServiceNameEqualFold applies the EqualFold predicate on the "ServiceName" field.
func ServiceNameEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldServiceName, v))
}

// ServiceNameContainsFold applies the ContainsFold predicate on the "ServiceName" field.
func ServiceNameContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldServiceName, v))
}

// SpanNameEQ applies the EQ predicate on the "SpanName" field.
func SpanNameEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanName, v))
}

// SpanNameNEQ applies the NEQ predicate on the "SpanName" field.
func SpanNameNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldSpanName, v))
}

// SpanNameIn applies the In predicate on the "SpanName" field.
func SpanNameIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldSpanName, vs...))
}

// SpanNameNotIn applies the NotIn predicate on the "SpanName" field.
func SpanNameNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldSpanName, vs...))
}

// SpanNameGT applies the GT predicate on the "SpanName" field.
func SpanNameGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldSpanName, v))
}

// SpanNameGTE applies the GTE predicate on the "SpanName" field.
func SpanNameGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldSpanName, v))
}

// SpanNameLT applies the LT predicate on the "SpanName" field.
func SpanNameLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldSpanName, v))
}

// SpanNameLTE applies the LTE predicate on the "SpanName" field.
func SpanNameLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldSpanName, v))
}

// SpanNameContains applies the Contains predicate on the "SpanName" field.
func SpanNameContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldSpanName, v))
}

// SpanNameHasPrefix applies the HasPrefix predicate on the "SpanName" field.
func SpanNameHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldSpanName, v))
}

// SpanNameHasSuffix applies the HasSuffix predicate on the "SpanName" field.
func SpanNameHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldSpanName, v))
}

// SpanNameEqualFold applies the EqualFold predicate on the "SpanName" field.
func SpanNameEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldSpanName, v))
}

// SpanNameContainsFold applies the ContainsFold predicate on the "SpanName" field.
func SpanNameContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldSpanName, v))
}

// SpanKindEQ applies the EQ predicate on the "SpanKind" field.
func SpanKindEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanKind, v))
}

// SpanKindNEQ applies the NEQ predicate on the "SpanKind" field.
func SpanKindNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldSpanKind, v))
}

// SpanKindIn applies the In predicate on the "SpanKind" field.
func SpanKindIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldSpanKind, vs...))
}

// SpanKindNotIn applies the NotIn predicate on the "SpanKind" field.
func SpanKindNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldSpanKind, vs...))
}

// SpanKindGT applies the GT predicate on the "SpanKind" field.
func SpanKindGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldSpanKind, v))
}

// SpanKindGTE applies the GTE predicate on the "SpanKind" field.
func SpanKindGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldSpanKind, v))
}

// SpanKindLT applies the LT predicate on the "SpanKind" field.
func SpanKindLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldSpanKind, v))
}

// SpanKindLTE applies the LTE predicate on the "SpanKind" field.
func SpanKindLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldSpanKind, v))
}

// SpanKindContains applies the Contains predicate on the "SpanKind" field.
func SpanKindContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldSpanKind, v))
}

// SpanKindHasPrefix applies the HasPrefix predicate on the "SpanKind" field.
func SpanKindHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldSpanKind, v))
}

// SpanKindHasSuffix applies the HasSuffix predicate on the "SpanKind" field.
func SpanKindHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldSpanKind, v))
}

// SpanKindEqualFold applies the EqualFold predicate on the "SpanKind" field.
func SpanKindEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldSpanKind, v))
}

// SpanKindContainsFold applies the ContainsFold predicate on the "SpanKind" field.
func SpanKindContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldSpanKind, v))
}

// FaultKindEQ applies the EQ predicate on the "FaultKind" field.
func FaultKindEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldFaultKind, v))
}

// FaultKindNEQ applies the NEQ predicate on the "FaultKind" field.
func FaultKindNEQ(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldFaultKind, v))
}

// FaultKindIn applies the In predicate on the "FaultKind" field.
func FaultKindIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldFaultKind, vs...))
}

// FaultKindNotIn applies the NotIn predicate on the "FaultKind" field.
func FaultKindNotIn(vs ...string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldFaultKind, vs...))
}

// FaultKindGT applies the GT predicate on the "FaultKind" field.
func FaultKindGT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldFaultKind, v))
}

// FaultKindGTE applies the GTE predicate on the "FaultKind" field.
func FaultKindGTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldFaultKind, v))
}

// FaultKindLT applies the LT predicate on the "FaultKind" field.
func FaultKindLT(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldFaultKind, v))
}

// FaultKindLTE applies the LTE predicate on the "FaultKind" field.
func FaultKindLTE(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldFaultKind, v))
}

// FaultKindContains applies the Contains predicate on the "FaultKind" field.
func FaultKindContains(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContains(FieldFaultKind, v))
}

// FaultKindHasPrefix applies the HasPrefix predicate on the "FaultKind" field.
func FaultKindHasPrefix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasPrefix(FieldFaultKind, v))
}

// FaultKindHasSuffix applies the HasSuffix predicate on the "FaultKind" field.
func FaultKindHasSuffix(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldHasSuffix(FieldFaultKind, v))
}

// FaultKindEqualFold applies the EqualFold predicate on the "FaultKind" field.
func FaultKindEqualFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEqualFold(FieldFaultKind, v))
}

// FaultKindContainsFold applies the ContainsFold predicate on the "FaultKind" field.
func FaultKindContainsFold(v string) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldContainsFold(FieldFaultKind, v))
}

// GapEQ applies the EQ predicate on the "Gap" field.
func GapEQ(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldGap, v))
}

// GapNEQ applies the NEQ predicate on the "Gap" field.
func GapNEQ(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldGap, v))
}

// GapIn applies the In predicate on the "Gap" field.
func GapIn(vs ...int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldGap, vs...))
}

// GapNotIn applies the NotIn predicate on the "Gap" field.
func GapNotIn(vs ...int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldGap, vs...))
}

// GapGT applies the GT predicate on the "Gap" field.
func GapGT(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldGap, v))
}

// GapGTE applies the GTE predicate on the "Gap" field.
func GapGTE(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldGap, v))
}

// GapLT applies the LT predicate on the "Gap" field.
func GapLT(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldGap, v))
}

// GapLTE applies the LTE predicate on the "Gap" field.
func GapLTE(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldGap, v))
}

// SelfDurationEQ applies the EQ predicate on the "SelfDuration" field.
func SelfDurationEQ(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSelfDuration, v))
}

// SelfDurationNEQ applies the NEQ predicate on the "SelfDuration" field.
func SelfDurationNEQ(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldSelfDuration, v))
}

// SelfDurationIn applies the In predicate on the "SelfDuration" field.
func SelfDurationIn(vs ...int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldSelfDuration, vs...))
}

// SelfDurationNotIn applies the NotIn predicate on the "SelfDuration" field.
func SelfDurationNotIn(vs ...int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldSelfDuration, vs...))
}

// SelfDurationGT applies the GT predicate on the "SelfDuration" field.
func SelfDurationGT(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldSelfDuration, v))
}

// SelfDurationGTE applies the GTE predicate on the "SelfDuration" field.
func SelfDurationGTE(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldSelfDuration, v))
}

// SelfDurationLT applies the LT predicate on the "SelfDuration" field.
func SelfDurationLT(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldSelfDuration, v))
}

// SelfDurationLTE applies the LTE predicate on the "SelfDuration" field.
func SelfDurationLTE(v int64) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldSelfDuration, v))
}

// ResourceAttributesEQ applies the EQ predicate on the "ResourceAttributes" field.
func ResourceAttributesEQ(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldResourceAttributes, v))
}

// ResourceAttributesNEQ applies the NEQ predicate on the "ResourceAttributes" field.
func ResourceAttributesNEQ(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldResourceAttributes, v))
}

// ResourceAttributesIn applies the In predicate on the "ResourceAttributes" field.
func ResourceAttributesIn(vs ...*schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldResourceAttributes, vs...))
}

// ResourceAttributesNotIn applies the NotIn predicate on the "ResourceAttributes" field.
func ResourceAttributesNotIn(vs ...*schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldResourceAttributes, vs...))
}

// ResourceAttributesGT applies the GT predicate on the "ResourceAttributes" field.
func ResourceAttributesGT(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldResourceAttributes, v))
}

// ResourceAttributesGTE applies the GTE predicate on the "ResourceAttributes" field.
func ResourceAttributesGTE(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldResourceAttributes, v))
}

// ResourceAttributesLT applies the LT predicate on the "ResourceAttributes" field.
func ResourceAttributesLT(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldResourceAttributes, v))
}

// ResourceAttributesLTE applies the LTE predicate on the "ResourceAttributes" field.
func ResourceAttributesLTE(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldResourceAttributes, v))
}

// SpanAttributesEQ applies the EQ predicate on the "SpanAttributes" field.
func SpanAttributesEQ(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldEQ(FieldSpanAttributes, v))
}

// SpanAttributesNEQ applies the NEQ predicate on the "SpanAttributes" field.
func SpanAttributesNEQ(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNEQ(FieldSpanAttributes, v))
}

// SpanAttributesIn applies the In predicate on the "SpanAttributes" field.
func SpanAttributesIn(vs ...*schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldIn(FieldSpanAttributes, vs...))
}

// SpanAttributesNotIn applies the NotIn predicate on the "SpanAttributes" field.
func SpanAttributesNotIn(vs ...*schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldNotIn(FieldSpanAttributes, vs...))
}

// SpanAttributesGT applies the GT predicate on the "SpanAttributes" field.
func SpanAttributesGT(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGT(FieldSpanAttributes, v))
}

// SpanAttributesGTE applies the GTE predicate on the "SpanAttributes" field.
func SpanAttributesGTE(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldGTE(FieldSpanAttributes, v))
}

// SpanAttributesLT applies the LT predicate on the "SpanAttributes" field.
func SpanAttributesLT(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLT(FieldSpanAttributes, v))
}

// SpanAttributesLTE applies the LTE predicate on the "SpanAttributes" field.
func SpanAttributesLTE(v *schema.Attributes) predicate.SpanFault {
	return predicate.SpanFault(sql.FieldLTE(FieldSpanAttributes, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.SpanFault) predicate.SpanFault {
	return predicate.SpanFault(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.SpanFault) predicate.SpanFault {
	return predicate.SpanFault(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.SpanFault) predicate.SpanFault {
	return predicate.SpanFault(sql.NotPredicates(p))
}
